all-groups: cut -d: -f1 /etc/group | sort

cats: highlight --line-numbers --line-number-length=3 --line-length=75 --wrap-simple --wrap-no-numbers --out-format=ansi --force

cdc: cd ./$1
c: cd $1; clear; pwd

compare-dir: diff --brief -Nr 

# Count files in folder. Folder name is optional
count: ls -1 ${1:-.} | wc -l

cm: chmod $1 $2
cmr: chmod $1 -R $2

co: chown $1 $2
cor: chown $1 -R $2

d: docker
  ps: ps --format "{{.ID}} {{.Names}}\t{{.Status}}  {{.Ports}}"
  p: ps -a --format="table {{.Names}}\t{{.Status}}\t{{.ID}}"
  clean: system prune -f
  deploy: stack deploy -c $1.yml $1
  i: images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
  images: images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
  n: network
  rmi: images --format "{{.Repository}}:{{.Tag}}" |grep $1 | xargs docker rmi -f
  rmv: volume ls --format "{{.Name}}" |grep $1 |xargs docker volume rm -f
  v: volume
  r: run -it --rm 
  replicas: service ls --format='table {{.Name}}\t{{.Mode}}\t{{.Replicas}}'
  s: service
  st: stack
  size: images --format '{{.Size}}\t{{.Repository}}:{{.Tag}}' | sort -h | column -t
  stats: stats --format "{{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}"

dc: docker-compose
#  r: run --rm
#  ci: -f.ci/docker-compose.yml
#  ls: config --services
  ud: up -d
  ub: up -d --build
  ur: up -d --force-recreate
  ubr: up -d --build --force-recreate
  u: up
  eb: exec $1 /bin/bash
  e: exec $1 ${@:2}
  rb: run $1 /bin/bash
  r: run $1 ${@:2}
  d: down
#  deploy: !docker stack deploy -c docker-compose.yml

odc: op dc
  ud: up -d
  ub: up -d --build
  ur: up -d --force-recreate
  ubr: up -d --build --force-recreate
  u: up
  eb: exec $1 /bin/bash
  e: exec $1 ${@:2}
  rb: run $1 /bin/bash
  r: run $1 ${@:2}
  d: down

dclf: dc logs -f

dfh: df -H

dps: d ps
dpsa: d ps -a

f: find |grep

g: git
  s: status
  l: log --all --graph --date=relative --pretty=format:'%h %Cgreen%ad%Creset %Cblue%an%Creset%n        %s%n       %C(auto)%d%Creset'
  ll: log --graph --oneline --decorate --all
  tail: log -${1:-5} --all --date=relative --pretty=format:'%h %Cgreen%ad%Creset %x09%Cblue%s%Creset'
  c: add . --all && git commit -am
  p: push
  m: merge
  b: branch
  d: diff
  co: checkout
  pl: pull
  ls: ls-tree --full-name --name-only -r HEAD
  chmod: update-index --chmod 
  compare: diff --stat --color $1..HEAD
  datelog: log --pretty=format:'%h %ad%x09%an%x09%s' --date=short
  discard: checkout -- . ; git clean -fd
  history: log -p
  optimize: repack -ad && sleep 2 && git gc
  remote-delete: push origin --delete
  rebuild: commit --allow-empty -m "trigger rebuild" ; git push
  rename: branch -m
  resolve-ours: checkout --ours . ; git add -u ; git commit -m 'resolve conflicts with --ours'
  resolve-theirs: checkout --theirs . ; git add -u ; git commit -m 'resolve conflicts with --theirs'
  rollback: revert --no-commit $1..HEAD
  shallow-clone: clone --depth 1
  upstream: checkout master && git fetch upstream && git merge upstream/master

  # show age of all git repos in subdirectories
  age: !for d in ./*/; do echo -e "\n\e[34m$d\e[0m" ; git -C $d log -1 --all --date=relative --pretty=format:'%Cgreen%ad%Creset %x09%s%n' ; done;

gg: g p
ggt: gg && gg --tag
gpl: g pl

gh: hub

#geoip: curl http://api.db-ip.com/v2/free/$1

# GitHub API - example usage: github /user/repos
#github: curl -H "Authorization: token $GITHUB_ACCESS_TOKEN" https://api.github.com$1

#https: http ${@:1:$((${#@}-1))} https://${@: -1}

inst: sudo apt install
uninst: sudo apt remove

killport: [[ $(lsof -ti:$1) ]] && kill -9 $(lsof -ti:$1)

l: ls -lah

less: less -S

myip: ifconfig |head -n2 |sed -rn 's/.*addr:([^ ]+) .*/\1/p'

# now-update: echo downloading... && curl -s https://api.github.com/repos/zeit

nv: env |grep -i

port: sudo lsof -i :$1

ports: sudo netstat -tulpn | grep LISTEN |grep -Po '(?<=:)(\d{2,5})' |sort -n  |uniq |tr '\n' '\t'

psf: ps -ef |grep 

py: python3

# repeat 5 echo hello
repeat: for i in `seq $1`; do ${@:2} ; done

runas: sudo su -s /bin/sh $1 -c "$2"
r: clear; ${@:1}

syslog: sudo grc tail -f /var/log/syslog

tracert: sudo traceroute -I 

#update: sudo apt update && sudo apt upgrade && sudo apt autoremove

ver: lsb_release -drc

what: alf which

update: sudo apt update && sudo apt upgrade -y && sudo snap refresh

p: pwbs
a: alf
als: alf s; source ~/.bash_aliases
y: yarn
n: npm
loop_infinite: while true; do ${@:1}; sleep 1; done
